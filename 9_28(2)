#include <stdio.h> 

main() {
	double d;
	float f;

	d = f = 12.3456789;
	printf("1. %f\n", d); 
	printf("2. %f\n", f);
	printf("3. %f\n", 1234); 
	printf("4. %f %f\n", d, d);
	printf("5. %f %f\n", f, f);
	printf("6. %f %f %f\n", f, d, 1234); 
	printf("7. %f %f %f\n", d, f, 1234); 
	printf("8. %f %f %f\n", f, 1234, d);
	printf("9. %f %f %f\n", d, 1234, f);
	printf("10. %f %f %f\n", 1234, d, f);
	printf("11. %f %f %f\n", 1234, f, d);
	printf("12. %d %d %d\n", 1234, d, f);
	printf("13. %d %d %d\n", d, 1234, f);
}

/*float은 %lf나 %f
double은 %lf
int는 %d(정수)
%f는 기본적으로 소숫점 6자리까지 그 후 반올림(짤린 이유)
변수d가 8byte 자리를 다 차지
저장공간이 겹쳐서 읽히기에 %d로 앞에서 4byte 읽는 거고
마지막에 1234 나오는 이유가 이거임

10, 11번 왜 1234이후 (d,f) (f,d) 엉망진창? (이거 해결하면 8,9번 1234 이후 엉망진창도 풀 수 있을 듯)*/

/*1. 12.345679
2. 12.345679
3. 0.000000
4. 12.345679 12.345679
5. 12.345679 12.345679
6. 12.345679 12.345679 0.000000
7. 12.345679 12.345679 0.000000
8. 12.345679 -26815615859892541759479566137184559249781357311086241242500133016228013304303316695161258191776060841225973500866249129663523954765458429966239646309416960.000000 0.000000
9. 12.345679 -26815615859892541759479566137184559249781357311086241242500133016228013304303316695161258191776060841225973500866249129663523954765458429966239646309416960.000000 0.000000
10. -26815615859892541759479566137184559249781357311086241242500133016228013304303316695161258191776060841225973500866249129663523954765458429966239646309416960.000000 -26815622269104743738155897867350300807544330642809690907084907687976281116116424459243543000159873066047136030853735910025954081831131911776704354882420736.000000 0.000000
11. -26815615859892541759479566137184559249781357311086241242500133016228013304303316695161258191776060841225973500866249129663523954765458429966239646309416960.000000 -26815622269104743738155897867350300807544330642809690907084907687976281116116424459243543000159873066047136030853735910025954081831131911776704354882420736.000000 0.000000
12. 1234 -536870912 1076408572
13. -536870912 1076408572 1234*/
